/*
 * This file is generated by jOOQ.
 */
package sk.catheaven.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import sk.catheaven.model.tables.TweetMentions;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TweetMentionsRecord extends UpdatableRecordImpl<TweetMentionsRecord> implements Record3<Integer, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tweet_mentions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tweet_mentions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tweet_mentions.account_id</code>.
     */
    public void setAccountId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tweet_mentions.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.tweet_mentions.tweet_id</code>.
     */
    public void setTweetId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tweet_mentions.tweet_id</code>.
     */
    public String getTweetId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TweetMentions.TWEET_MENTIONS.ID;
    }

    @Override
    public Field<Long> field2() {
        return TweetMentions.TWEET_MENTIONS.ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return TweetMentions.TWEET_MENTIONS.TWEET_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAccountId();
    }

    @Override
    public String component3() {
        return getTweetId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAccountId();
    }

    @Override
    public String value3() {
        return getTweetId();
    }

    @Override
    public TweetMentionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TweetMentionsRecord value2(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public TweetMentionsRecord value3(String value) {
        setTweetId(value);
        return this;
    }

    @Override
    public TweetMentionsRecord values(Integer value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TweetMentionsRecord
     */
    public TweetMentionsRecord() {
        super(TweetMentions.TWEET_MENTIONS);
    }

    /**
     * Create a detached, initialised TweetMentionsRecord
     */
    public TweetMentionsRecord(Integer id, Long accountId, String tweetId) {
        super(TweetMentions.TWEET_MENTIONS);

        setId(id);
        setAccountId(accountId);
        setTweetId(tweetId);
    }
}
