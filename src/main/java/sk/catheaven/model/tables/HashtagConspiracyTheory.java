/*
 * This file is generated by jOOQ.
 */
package sk.catheaven.model.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import sk.catheaven.model.Keys;
import sk.catheaven.model.Public;
import sk.catheaven.model.tables.records.HashtagConspiracyTheoryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HashtagConspiracyTheory extends TableImpl<HashtagConspiracyTheoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.hashtag_conspiracy_theory</code>
     */
    public static final HashtagConspiracyTheory HASHTAG_CONSPIRACY_THEORY = new HashtagConspiracyTheory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HashtagConspiracyTheoryRecord> getRecordType() {
        return HashtagConspiracyTheoryRecord.class;
    }

    /**
     * The column <code>public.hashtag_conspiracy_theory.id</code>.
     */
    public final TableField<HashtagConspiracyTheoryRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.hashtag_conspiracy_theory.hashtag_id</code>.
     */
    public final TableField<HashtagConspiracyTheoryRecord, Integer> HASHTAG_ID = createField(DSL.name("hashtag_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column
     * <code>public.hashtag_conspiracy_theory.conspiracy_theory_id</code>.
     */
    public final TableField<HashtagConspiracyTheoryRecord, Integer> CONSPIRACY_THEORY_ID = createField(DSL.name("conspiracy_theory_id"), SQLDataType.INTEGER.nullable(false), this, "");

    private HashtagConspiracyTheory(Name alias, Table<HashtagConspiracyTheoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private HashtagConspiracyTheory(Name alias, Table<HashtagConspiracyTheoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.hashtag_conspiracy_theory</code> table
     * reference
     */
    public HashtagConspiracyTheory(String alias) {
        this(DSL.name(alias), HASHTAG_CONSPIRACY_THEORY);
    }

    /**
     * Create an aliased <code>public.hashtag_conspiracy_theory</code> table
     * reference
     */
    public HashtagConspiracyTheory(Name alias) {
        this(alias, HASHTAG_CONSPIRACY_THEORY);
    }

    /**
     * Create a <code>public.hashtag_conspiracy_theory</code> table reference
     */
    public HashtagConspiracyTheory() {
        this(DSL.name("hashtag_conspiracy_theory"), null);
    }

    public <O extends Record> HashtagConspiracyTheory(Table<O> child, ForeignKey<O, HashtagConspiracyTheoryRecord> key) {
        super(child, key, HASHTAG_CONSPIRACY_THEORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public UniqueKey<HashtagConspiracyTheoryRecord> getPrimaryKey() {
        return Keys.HASHTAG_CONSPIRACY_THEORY_PKEY;
    }

    @Override
    public List<ForeignKey<HashtagConspiracyTheoryRecord, ?>> getReferences() {
        return Arrays.asList(Keys.HASHTAG_CONSPIRACY_THEORY__HASHTAG_CONSPIRACY_THEORY_HASHTAG_ID_FKEY, Keys.HASHTAG_CONSPIRACY_THEORY__HASHTAG_CONSPIRACY_THEORY_CONSPIRACY_THEORY_ID_FKEY);
    }

    private transient Hashtags _hashtags;
    private transient ConspiracyTheories _conspiracyTheories;

    public Hashtags hashtags() {
        if (_hashtags == null)
            _hashtags = new Hashtags(this, Keys.HASHTAG_CONSPIRACY_THEORY__HASHTAG_CONSPIRACY_THEORY_HASHTAG_ID_FKEY);

        return _hashtags;
    }

    public ConspiracyTheories conspiracyTheories() {
        if (_conspiracyTheories == null)
            _conspiracyTheories = new ConspiracyTheories(this, Keys.HASHTAG_CONSPIRACY_THEORY__HASHTAG_CONSPIRACY_THEORY_CONSPIRACY_THEORY_ID_FKEY);

        return _conspiracyTheories;
    }

    @Override
    public HashtagConspiracyTheory as(String alias) {
        return new HashtagConspiracyTheory(DSL.name(alias), this);
    }

    @Override
    public HashtagConspiracyTheory as(Name alias) {
        return new HashtagConspiracyTheory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HashtagConspiracyTheory rename(String name) {
        return new HashtagConspiracyTheory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HashtagConspiracyTheory rename(Name name) {
        return new HashtagConspiracyTheory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
